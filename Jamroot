#    DYNAMO:- Event driven molecular dynamics simulator 
#    http://www.marcusbannerman.co.uk/dynamo
#    Copyright (C) 2009  Marcus N Campbell Bannerman <m.bannerman@gmail.com>
#
#    This program is free software: you can redistribute it and/or
#    modify it under the terms of the GNU General Public License
#    version 3 as published by the Free Software Foundation.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

##########################################################################
path-constant BUILD_DIR_PATH : ./build-dir ;
path-constant LIB_INSTALL_PATH : ./lib ;
path-constant BIN_INSTALL_PATH : ./bin ;
path-constant INCLUDE_INSTALL_PATH : ./include ;

#System libraries
use-project /system : ./ ;
lib cwiid : : <link>shared <name>cwiid : : <define>COIL_wiimote ;
lib png   : : <link>shared <name>png> ;
lib glut  : : <link>shared <name>glut ;
lib GLU   : : <link>shared <name>GLU ;
lib GL    : : <link>shared <name>GL ;
lib Xext  : : <link>shared <name>Xext ;
lib X11   : : <link>shared <name>X11 ;
lib rt    : : <link>shared <name>rt ;
lib GLEW  : : <link>shared <name>GLEW ;
lib bz2   : : <link>shared <name>bz2 ;
lib z     : : <link>shared <name>z ;
lib dl    : : <link>shared <name>dl ;
lib boost_system           ;
lib boost_filesystem       : boost_system : <name>boost_filesystem ;
lib boost_program_options  : boost_system : <name>boost_program_options ;
lib boost_iostreams        : boost_system bz2 z : <name>boost_iostreams ;
alias gtkmm : : <use>png : : <linkflags>"`pkg-config gtkmm-2.4 --libs`" <cflags>"`pkg-config gtkmm-2.4 --cflags`" ;

##########################################################################
#Additional build variants
#
# The fulldebug variant uses compiler and library features to aid in debugging
# We might consider adding <cxxflags>ansi <cxxflags>pedantic
#<cxxflags>Weffc++ <define>_GLIBXX_DEBUG_PEDANTIC
#<define>_GLIBCXX_DEBUG_PEDANTIC <define>_GLIBCXX_CONCEPT_CHECKS
#<define>_GLIBCPP_DEBUG_PEDANTIC <define>_GLIBCPP_DEBUG
#<define>_GLIBCPP_CONCEPT_CHECKS

variant fulldebug : debug 
	: <define>_GLIBCXX_DEBUG
	<define>DYNAMO_DEBUG <define>DYNAMO_CollDebug
	<cxxflags>-fstack-protector-all
	;

# The valgrind variant is useful for code analysis in tools like
# valgrind. It merely turns debug symbols on.
variant valgrind : <inlining>on <optimization>speed <debug-symbols>on <profiling>off ;

##########################################################################
#Main project definition
project	: requirements
          <threading>multi
	  <variant>release:<define>NDEBUG
	  <cflags>-std=c++0x
	  #<cflags>-ansi <cflags>-pedantic
	: default-build release
	: build-dir $(BUILD_DIR_PATH)
	;

##########################################################################
#Targets

use-project /dynamo : src/dynamo ;
use-project /magnet : src/magnet ;
use-project /coil : src/coil ;
use-project /opencl : src/opencl ;

alias install : /dynamo//install-dynamo  ;

alias install-libraries : /coil//install-coil /magnet//install-magnet ;

alias test : /magnet//test ;

alias lsCL : /opencl//install-lsCL ;

alias coilparticletest : /coil//coilparticletest ;

explicit install test coilparticletest lsCL ;
